#BlueJ class context
comment0.target=Board
comment1.params=
comment1.target=Board()
comment10.params=
comment10.target=int[][]\ currentBoard()
comment10.text=\r\n\ return\ the\ current\ board\r\n\ @return\ current\ board\r\n
comment11.params=player
comment11.target=boolean\ isWin(int)
comment11.text=\r\n\ Check\ after\ player\ made\ a\ move\r\n\ @param\ player\r\n\ @return\r\n
comment12.params=player
comment12.target=int\ getScore(int)
comment12.text=\r\n\ Get\ score(utility)\ of\ current\ layout\ for\ current\ player\r\n\ How\ many\ part\ now\ the\ board\ have\ on\ current\ player's\ side\r\n\r\n\ @param\ player\r\n\ @return\r\n
comment13.params=grid\ i\ j\ player
comment13.target=void\ mark(int[][],\ int,\ int,\ int)
comment14.params=player
comment14.target=java.util.ArrayList\ getAllAvailableCheckers(int)
comment14.text=\r\n\ Get\ all\ available\ checkers\ for\ currentPlayer\r\n
comment15.params=player
comment15.target=java.util.ArrayList\ getAllPossibleMoves(int)
comment15.text=\r\n\ In\ current\ layout\ of\ game,\ for\ current\ player,\ generate\ all\ possible\ moves\ for\ every\ available\ checker\r\n\ @param\ player\ current\ player\r\n\ @return\r\n
comment16.params=move\ player
comment16.target=void\ moveChecker(Move,\ int)
comment16.text=\r\n\ Move\ checker\ by\ provided\ move\r\n\ @param\ move\r\n
comment17.params=player
comment17.target=void\ undoLastMove(int)
comment17.text=\r\n\ Undo\ the\ last\ move\ made\ by\ a\ particular\ player\r\n\ If\ last\ move\ made\ capture,\ restore\ the\ original\ checker\r\n\ @param\ player\r\n
comment18.params=
comment18.target=boolean\ hasWinner()
comment19.params=player
comment19.target=int\ CountCheckers(int)
comment2.params=board
comment2.target=Board(Board)
comment2.text=\r\n\ Copy\ the\ layout\ for\ some\ certain\ state\ of\ game\ to\ a\ new\ board\r\n\ @param\ board\r\n
comment20.params=map
comment20.target=void\ setMap(int[][])
comment21.params=
comment21.target=int[][]\ getMap()
comment3.params=n
comment3.target=void\ init(int)
comment3.text=\r\n\ initial\ board\ width\r\n\ @param\ n\ how\ many\ cells\ per\ row(default\ 5)\r\n
comment4.params=
comment4.target=void\ printMap()
comment5.params=x\ y
comment5.target=int\ getCell(int,\ int)
comment5.text=\r\n\ Get\ the\ value\ of\ (x,\ y)\ position\r\n\ @param\ x\r\n\ @param\ y\r\n\ @return\ The\ value\ in\ this\ cell\ of\ the\ board\r\n
comment6.params=
comment6.target=int\ getLength()
comment7.params=length
comment7.target=void\ setLength(int)
comment8.params=p\ x\ y
comment8.target=boolean\ selectChecker(int,\ int,\ int)
comment8.text=\r\n\ Select\ particular\ position\ of\ checker\r\n\ @param\ p\ current\ player\r\n\ @param\ x\ \r\n\ @param\ y\r\n\ @return\ Can\ this\ player\ select\ this\ checker\ or\ not(Is\ this\ checker\ belongs\ to\ this\ player)\r\n
comment9.params=p\ x\ y\ newX\ newY
comment9.target=boolean\ moveChecker(int,\ int,\ int,\ int,\ int)
comment9.text=\r\n\ Move\ particular\ checker\r\n\ @param\ p\ Current\ Player\r\n\ @param\ x\ Original\ x\ position\r\n\ @param\ y\ Original\ y\ position\r\n\ @param\ newX\ Target\ x\ position\r\n\ @param\ newY\ Target\ y\ position\r\n\ @return\ True\ if\ successfully\ moved\ selected\ checker\r\n
numComments=22
